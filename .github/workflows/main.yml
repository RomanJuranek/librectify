name: Build

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        version: ['5.15.2']
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install OpenCV
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install --verbose opencv

    - name: Build
      if: startsWith(matrix.os, 'windows')
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cd include/eigen
        mkdir build
        cd build
        cmake -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_PREFIX=C:/Users/pcmlich-virt/Desktop/eigen3 ..
        cmake --build . --config Release
        cmake --build . --config Release --target install
        cd ../../..

        mkdir build
        cd build
        cmake -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -Deigen3_DIR=C:\Users\pcmlich-virt\Desktop\eigen3\share\eigen3\cmake\ -DOpenCV_DIR=C:\tools\opencv\build\ ..
        cmake --build . --config Release
        7z a -tzip librectify.zip -r *

      shell: cmd


    - name: Archive build results
      uses: actions/upload-artifact@v2
      with:
        name: librectify.zip
        path: ./build/librectify.zip
